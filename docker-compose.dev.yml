version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: ems-mysql-dev
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root_password_123
      MYSQL_DATABASE: EMS
      MYSQL_USER: ems_user
      MYSQL_PASSWORD: ems_password123
    ports:
      - "3306:3306"
    volumes:
      - mysql_dev_data:/var/lib/mysql
      - ./backend/db-commands:/docker-entrypoint-initdb.d
    networks:
      - ems-dev-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "ems_user", "-pems_password123"]
      timeout: 20s
      retries: 10

  # Backend API (Development)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ems-backend-dev
    restart: unless-stopped
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5000
      - ConnectionStrings__DefaultConnection=Server=mysql;Port=3306;Database=EMS;Uid=ems_user;Pwd=ems_password123;SslMode=None;AllowPublicKeyRetrieval=True;
      - Jwt__Key=your-super-secret-jwt-key-here-make-it-long-and-random-for-development
      - Jwt__Issuer=http://localhost:5000
      - Jwt__Audience=http://localhost:3000
      - Jwt__ExpiryMinutes=60
    ports:
      - "5000:5000"
    # volumes:
    #   - ./backend/EMS.API:/app
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - ems-dev-network
    # healthcheck:
    #   test: ["CMD-SHELL", "nc -z localhost 5000 || exit 1"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
    #   start_period: 40s

  # Frontend (Development with hot reload)
  frontend:
    image: node:20-alpine
    container_name: ems-frontend-dev
    restart: unless-stopped
    working_dir: /app
    environment:
      - NODE_ENV=development
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0"
    depends_on:
      - backend
    networks:
      - ems-dev-network

  # Database Seeding Service (Development)
  seeder:
    image: curlimages/curl:latest
    container_name: ems-seeder-dev
    restart: "no"
    depends_on:
      - backend
    environment:
      - API_URL=http://backend:5000
    command: >
      sh -c "
        echo 'Waiting for backend API to be ready...' &&
        sleep 15 &&
        echo 'Getting authentication token...' &&
        TOKEN=$$(curl -s -X POST http://backend:5000/api/auth/login -H 'Content-Type: application/json' -d '{\"username\":\"admin\",\"password\":\"admin123\"}' | grep -o '\"token\":\"[^\"]*\"' | cut -d'\"' -f4) &&
        echo 'Seeding database...' &&
        if [ -n \"$$TOKEN\" ]; then
          curl -X POST http://backend:5000/api/seed/seed -H 'Content-Type: application/json' -H \"Authorization: Bearer $$TOKEN\"
        else
          curl -X POST http://backend:5000/api/seed/seed -H 'Content-Type: application/json'
        fi &&
        echo 'Database seeding completed!'
      "
    networks:
      - ems-dev-network

volumes:
  mysql_dev_data:
    driver: local

networks:
  ems-dev-network:
    driver: bridge
