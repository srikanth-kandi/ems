// <auto-generated />
using System;
using EMS.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EMS.API.Migrations
{
    [DbContext(typeof(EMSDbContext))]
    [Migration("20250911174002_EnhancedSeedData")]
    partial class EnhancedSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("EMS.API.Models.Attendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CheckInTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("CheckOutTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<TimeSpan?>("TotalHours")
                        .HasColumnType("time(6)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CheckOutTime");

                    b.HasIndex("Date");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("Date", "CheckInTime");

                    b.HasIndex("EmployeeId", "Date");

                    b.ToTable("Attendances");
                });

            modelBuilder.Entity("EMS.API.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("ManagerName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 9, 11, 17, 39, 55, 955, DateTimeKind.Utc).AddTicks(9502),
                            Description = "Manages employee relations, recruitment, and benefits",
                            ManagerName = "Sarah Johnson",
                            Name = "Human Resources"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 9, 11, 17, 39, 55, 955, DateTimeKind.Utc).AddTicks(9506),
                            Description = "Handles all technology infrastructure and software development",
                            ManagerName = "Michael Chen",
                            Name = "Information Technology"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 9, 11, 17, 39, 55, 955, DateTimeKind.Utc).AddTicks(9508),
                            Description = "Manages financial planning, accounting, and budgeting",
                            ManagerName = "Robert Williams",
                            Name = "Finance"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 9, 11, 17, 39, 55, 955, DateTimeKind.Utc).AddTicks(9511),
                            Description = "Responsible for brand management and customer acquisition",
                            ManagerName = "Emily Davis",
                            Name = "Marketing"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 9, 11, 17, 39, 55, 955, DateTimeKind.Utc).AddTicks(9513),
                            Description = "Handles customer relationships and revenue generation",
                            ManagerName = "David Martinez",
                            Name = "Sales"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 9, 11, 17, 39, 55, 955, DateTimeKind.Utc).AddTicks(9515),
                            Description = "Manages day-to-day business operations and logistics",
                            ManagerName = "Lisa Anderson",
                            Name = "Operations"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 9, 11, 17, 39, 55, 955, DateTimeKind.Utc).AddTicks(9518),
                            Description = "Provides customer service and technical support",
                            ManagerName = "James Wilson",
                            Name = "Customer Support"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2025, 9, 11, 17, 39, 55, 955, DateTimeKind.Utc).AddTicks(9520),
                            Description = "Conducts product research and innovation",
                            ManagerName = "Dr. Jennifer Taylor",
                            Name = "Research & Development"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2025, 9, 11, 17, 39, 55, 955, DateTimeKind.Utc).AddTicks(9522),
                            Description = "Handles legal compliance and contract management",
                            ManagerName = "Attorney Mark Brown",
                            Name = "Legal"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2025, 9, 11, 17, 39, 55, 955, DateTimeKind.Utc).AddTicks(9524),
                            Description = "Ensures product and service quality standards",
                            ManagerName = "Patricia Garcia",
                            Name = "Quality Assurance"
                        });
                });

            modelBuilder.Entity("EMS.API.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateOfJoining")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Position")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("DateOfJoining");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("IsActive");

                    b.HasIndex("DateOfJoining", "IsActive");

                    b.HasIndex("DepartmentId", "IsActive");

                    b.HasIndex("FirstName", "LastName");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("EMS.API.Models.PerformanceMetric", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Achievements")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Comments")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Goals")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("PerformanceScore")
                        .HasColumnType("decimal(5,2)");

                    b.Property<int>("Quarter")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("PerformanceScore");

                    b.HasIndex("Year", "Quarter");

                    b.HasIndex("EmployeeId", "Year", "Quarter");

                    b.ToTable("PerformanceMetrics");
                });

            modelBuilder.Entity("EMS.API.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastLoginAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("User");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 9, 11, 17, 39, 56, 416, DateTimeKind.Utc).AddTicks(9074),
                            Email = "admin@ems.com",
                            IsActive = true,
                            PasswordHash = "$2a$11$zXj9morSGFoT4/eCD3.dHejBR/RGVbMmgGMN82amCUQ/dqfvRk75a",
                            Role = "Admin",
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 9, 11, 17, 39, 56, 767, DateTimeKind.Utc).AddTicks(8756),
                            Email = "hr@ems.com",
                            IsActive = true,
                            PasswordHash = "$2a$11$oq2RP3YX4qn9mZRTnyGfj.sZ6BA1QWqqOx.qni5C4pgDHcG1jo/4.",
                            Role = "HR",
                            Username = "hr_manager"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 9, 11, 17, 39, 57, 164, DateTimeKind.Utc).AddTicks(1847),
                            Email = "manager@ems.com",
                            IsActive = true,
                            PasswordHash = "$2a$11$a1bXbjMSaeotLQ92hh7gf.CELQ3LJp8d1rlVAuBg0UBUTxV8qGbw6",
                            Role = "Manager",
                            Username = "manager"
                        });
                });

            modelBuilder.Entity("EMS.API.Models.Attendance", b =>
                {
                    b.HasOne("EMS.API.Models.Employee", "Employee")
                        .WithMany("Attendances")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("EMS.API.Models.Employee", b =>
                {
                    b.HasOne("EMS.API.Models.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("EMS.API.Models.PerformanceMetric", b =>
                {
                    b.HasOne("EMS.API.Models.Employee", "Employee")
                        .WithMany("PerformanceMetrics")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("EMS.API.Models.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("EMS.API.Models.Employee", b =>
                {
                    b.Navigation("Attendances");

                    b.Navigation("PerformanceMetrics");
                });
#pragma warning restore 612, 618
        }
    }
}
